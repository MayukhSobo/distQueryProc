// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR FileRequest::FileRequest(
    ::_pbi::ConstantInitialized)
  : base_path_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , file_list_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct FileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileRequestDefaultTypeInternal() {}
  union {
    FileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileRequestDefaultTypeInternal _FileRequest_default_instance_;
PROTOBUF_CONSTEXPR YearlyResult::YearlyResult(
    ::_pbi::ConstantInitialized)
  : year_(0)
  , min_score_(0)
  , sum_score_(int64_t{0})
  , count_(int64_t{0})
  , max_score_(0){}
struct YearlyResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR YearlyResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~YearlyResultDefaultTypeInternal() {}
  union {
    YearlyResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 YearlyResultDefaultTypeInternal _YearlyResult_default_instance_;
PROTOBUF_CONSTEXPR FileResponse::FileResponse(
    ::_pbi::ConstantInitialized)
  : yearly_results_(){}
struct FileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileResponseDefaultTypeInternal() {}
  union {
    FileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileResponseDefaultTypeInternal _FileResponse_default_instance_;
static ::_pb::Metadata file_level_metadata_message_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_message_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_message_2eproto = nullptr;

const uint32_t TableStruct_message_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::FileRequest, base_path_),
  PROTOBUF_FIELD_OFFSET(::FileRequest, file_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::YearlyResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::YearlyResult, year_),
  PROTOBUF_FIELD_OFFSET(::YearlyResult, min_score_),
  PROTOBUF_FIELD_OFFSET(::YearlyResult, max_score_),
  PROTOBUF_FIELD_OFFSET(::YearlyResult, sum_score_),
  PROTOBUF_FIELD_OFFSET(::YearlyResult, count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::FileResponse, yearly_results_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::FileRequest)},
  { 8, -1, -1, sizeof(::YearlyResult)},
  { 19, -1, -1, sizeof(::FileResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_FileRequest_default_instance_._instance,
  &::_YearlyResult_default_instance_._instance,
  &::_FileResponse_default_instance_._instance,
};

const char descriptor_table_protodef_message_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rmessage.proto\"3\n\013FileRequest\022\021\n\tbase_p"
  "ath\030\001 \001(\t\022\021\n\tfile_list\030\002 \001(\t\"d\n\014YearlyRe"
  "sult\022\014\n\004year\030\001 \001(\005\022\021\n\tmin_score\030\002 \001(\005\022\021\n"
  "\tmax_score\030\003 \001(\005\022\021\n\tsum_score\030\004 \001(\003\022\r\n\005c"
  "ount\030\005 \001(\003\"5\n\014FileResponse\022%\n\016yearly_res"
  "ults\030\001 \003(\0132\r.YearlyResultb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_message_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_message_2eproto = {
    false, false, 233, descriptor_table_protodef_message_2eproto,
    "message.proto",
    &descriptor_table_message_2eproto_once, nullptr, 0, 3,
    schemas, file_default_instances, TableStruct_message_2eproto::offsets,
    file_level_metadata_message_2eproto, file_level_enum_descriptors_message_2eproto,
    file_level_service_descriptors_message_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_message_2eproto_getter() {
  return &descriptor_table_message_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_message_2eproto(&descriptor_table_message_2eproto);

// ===================================================================

class FileRequest::_Internal {
 public:
};

FileRequest::FileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:FileRequest)
}
FileRequest::FileRequest(const FileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  base_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    base_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_base_path().empty()) {
    base_path_.Set(from._internal_base_path(), 
      GetArenaForAllocation());
  }
  file_list_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    file_list_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_list().empty()) {
    file_list_.Set(from._internal_file_list(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:FileRequest)
}

inline void FileRequest::SharedCtor() {
base_path_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  base_path_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
file_list_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  file_list_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FileRequest::~FileRequest() {
  // @@protoc_insertion_point(destructor:FileRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  base_path_.Destroy();
  file_list_.Destroy();
}

void FileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:FileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  base_path_.ClearToEmpty();
  file_list_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string base_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_base_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "FileRequest.base_path"));
        } else
          goto handle_unusual;
        continue;
      // string file_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_file_list();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "FileRequest.file_list"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string base_path = 1;
  if (!this->_internal_base_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_base_path().data(), static_cast<int>(this->_internal_base_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "FileRequest.base_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_base_path(), target);
  }

  // string file_list = 2;
  if (!this->_internal_file_list().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_list().data(), static_cast<int>(this->_internal_file_list().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "FileRequest.file_list");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_file_list(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileRequest)
  return target;
}

size_t FileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string base_path = 1;
  if (!this->_internal_base_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_base_path());
  }

  // string file_list = 2;
  if (!this->_internal_file_list().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_list());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileRequest::GetClassData() const { return &_class_data_; }

void FileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileRequest *>(to)->MergeFrom(
      static_cast<const FileRequest &>(from));
}


void FileRequest::MergeFrom(const FileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_base_path().empty()) {
    _internal_set_base_path(from._internal_base_path());
  }
  if (!from._internal_file_list().empty()) {
    _internal_set_file_list(from._internal_file_list());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileRequest::CopyFrom(const FileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileRequest::IsInitialized() const {
  return true;
}

void FileRequest::InternalSwap(FileRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &base_path_, lhs_arena,
      &other->base_path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &file_list_, lhs_arena,
      &other->file_list_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FileRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[0]);
}

// ===================================================================

class YearlyResult::_Internal {
 public:
};

YearlyResult::YearlyResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:YearlyResult)
}
YearlyResult::YearlyResult(const YearlyResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&year_, &from.year_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_score_) -
    reinterpret_cast<char*>(&year_)) + sizeof(max_score_));
  // @@protoc_insertion_point(copy_constructor:YearlyResult)
}

inline void YearlyResult::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&year_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&max_score_) -
    reinterpret_cast<char*>(&year_)) + sizeof(max_score_));
}

YearlyResult::~YearlyResult() {
  // @@protoc_insertion_point(destructor:YearlyResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void YearlyResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YearlyResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YearlyResult::Clear() {
// @@protoc_insertion_point(message_clear_start:YearlyResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&year_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_score_) -
      reinterpret_cast<char*>(&year_)) + sizeof(max_score_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YearlyResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 year = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          year_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 min_score = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          min_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 max_score = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          max_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 sum_score = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          sum_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 count = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* YearlyResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:YearlyResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 year = 1;
  if (this->_internal_year() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_year(), target);
  }

  // int32 min_score = 2;
  if (this->_internal_min_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_min_score(), target);
  }

  // int32 max_score = 3;
  if (this->_internal_max_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_max_score(), target);
  }

  // int64 sum_score = 4;
  if (this->_internal_sum_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_sum_score(), target);
  }

  // int64 count = 5;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YearlyResult)
  return target;
}

size_t YearlyResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YearlyResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 year = 1;
  if (this->_internal_year() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_year());
  }

  // int32 min_score = 2;
  if (this->_internal_min_score() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_min_score());
  }

  // int64 sum_score = 4;
  if (this->_internal_sum_score() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_sum_score());
  }

  // int64 count = 5;
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_count());
  }

  // int32 max_score = 3;
  if (this->_internal_max_score() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_max_score());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData YearlyResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    YearlyResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*YearlyResult::GetClassData() const { return &_class_data_; }

void YearlyResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<YearlyResult *>(to)->MergeFrom(
      static_cast<const YearlyResult &>(from));
}


void YearlyResult::MergeFrom(const YearlyResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YearlyResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_year() != 0) {
    _internal_set_year(from._internal_year());
  }
  if (from._internal_min_score() != 0) {
    _internal_set_min_score(from._internal_min_score());
  }
  if (from._internal_sum_score() != 0) {
    _internal_set_sum_score(from._internal_sum_score());
  }
  if (from._internal_count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from._internal_max_score() != 0) {
    _internal_set_max_score(from._internal_max_score());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void YearlyResult::CopyFrom(const YearlyResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YearlyResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YearlyResult::IsInitialized() const {
  return true;
}

void YearlyResult::InternalSwap(YearlyResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(YearlyResult, max_score_)
      + sizeof(YearlyResult::max_score_)
      - PROTOBUF_FIELD_OFFSET(YearlyResult, year_)>(
          reinterpret_cast<char*>(&year_),
          reinterpret_cast<char*>(&other->year_));
}

::PROTOBUF_NAMESPACE_ID::Metadata YearlyResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[1]);
}

// ===================================================================

class FileResponse::_Internal {
 public:
};

FileResponse::FileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  yearly_results_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:FileResponse)
}
FileResponse::FileResponse(const FileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      yearly_results_(from.yearly_results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:FileResponse)
}

inline void FileResponse::SharedCtor() {
}

FileResponse::~FileResponse() {
  // @@protoc_insertion_point(destructor:FileResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:FileResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  yearly_results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .YearlyResult yearly_results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_yearly_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FileResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .YearlyResult yearly_results = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_yearly_results_size()); i < n; i++) {
    const auto& repfield = this->_internal_yearly_results(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileResponse)
  return target;
}

size_t FileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .YearlyResult yearly_results = 1;
  total_size += 1UL * this->_internal_yearly_results_size();
  for (const auto& msg : this->yearly_results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileResponse::GetClassData() const { return &_class_data_; }

void FileResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileResponse *>(to)->MergeFrom(
      static_cast<const FileResponse &>(from));
}


void FileResponse::MergeFrom(const FileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  yearly_results_.MergeFrom(from.yearly_results_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileResponse::CopyFrom(const FileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileResponse::IsInitialized() const {
  return true;
}

void FileResponse::InternalSwap(FileResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  yearly_results_.InternalSwap(&other->yearly_results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::FileRequest*
Arena::CreateMaybeMessage< ::FileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::FileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::YearlyResult*
Arena::CreateMaybeMessage< ::YearlyResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::YearlyResult >(arena);
}
template<> PROTOBUF_NOINLINE ::FileResponse*
Arena::CreateMaybeMessage< ::FileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::FileResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
